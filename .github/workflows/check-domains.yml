name: Automated Domain Availability Checker

on:
  # schedule:
  #   # Run every hour at minute 0
  #   - cron: '0 * * * *'

  # Allow manual triggering for testing
  workflow_dispatch:
    inputs:
      send_heartbeat:
        description: 'Send heartbeat notification even if no domains available'
        required: false
        default: true
        type: boolean

env:
  PYTHON_VERSION: '3.13'

jobs:
  check-domains:
    name: Check Domain Availability
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Verify installation
        run: |
          echo "=== Debugging Installation ==="
          which vibe || echo "vibe command not found in PATH"
          vibe --version || echo "vibe --version failed"
          echo "PATH: $PATH"
          echo "Installed packages:"
          pip list | grep -E "(domain|typer)" || echo "No matching packages found"
          echo "=== End Debug Info ==="

      - name: Check domain availability (Scheduled)
        if: github.event_name == 'schedule'
        env:
          WHOIS_API_KEY: ${{ secrets.WHOIS_API_KEY }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          # Run scheduled domain check with heartbeat
          echo "Running scheduled domain check..."
          echo "Trigger: ${{ github.event_name }}"
          echo "Secrets check:"
          echo "  WHOIS_API_KEY: ${WHOIS_API_KEY:+SET}"
          echo "  SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL:+SET}"

          if ! vibe check-domains --scheduled --heartbeat; then
            echo "Domain check failed with exit code $?"
            exit 1
          fi
          echo "Scheduled domain check completed successfully"

      - name: Check domain availability (Manual)
        if: github.event_name == 'workflow_dispatch'
        env:
          WHOIS_API_KEY: ${{ secrets.WHOIS_API_KEY }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          # Run manual domain check
          echo "Running manual domain check..."
          echo "Trigger: ${{ github.event_name }}"
          echo "Heartbeat input: ${{ github.event.inputs.send_heartbeat }}"
          echo "Secrets check:"
          echo "  WHOIS_API_KEY: ${WHOIS_API_KEY:+SET}"
          echo "  SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL:+SET}"

          HEARTBEAT_FLAG=""
          if [ "${{ github.event.inputs.send_heartbeat }}" = "true" ]; then
            HEARTBEAT_FLAG="--heartbeat"
          fi

          if ! vibe check-domains --manual $HEARTBEAT_FLAG; then
            echo "Domain check failed with exit code $?"
            exit 1
          fi
          echo "Manual domain check completed successfully"

      - name: Notify on failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          # Send failure notification to Slack
          TRIGGER_TYPE="Scheduled"
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TRIGGER_TYPE="Manual"
          fi

          curl -X POST -H 'Content-type: application/json' \
            --data "{
              \"text\": \"üö® Domain Tracker GitHub Action Failed\\n\\n‚ùå The automated domain availability check encountered an error.\\n\\nüìã **Details:**\\n‚Ä¢ Workflow: ${{ github.workflow }}\\n‚Ä¢ Trigger: ${TRIGGER_TYPE}\\n‚Ä¢ Run ID: ${{ github.run_id }}\\n‚Ä¢ Repository: ${{ github.repository }}\\n‚Ä¢ Timestamp: $(date -u +'%Y-%m-%d %H:%M:%S UTC')\\n\\nüîó [View Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\\n\\nPlease check the GitHub Actions logs for details.\"
            }" \
            $SLACK_WEBHOOK_URL || echo "Failed to send Slack notification"
